version: '3.7'

networks:
    internal:
      external: false # Create the volume if it doesn't exist
      name: servicenetwork

services:
    rabbitmq-master:
        hostname: rabbitmq-master
        container_name: rabbitmq-master
        image: microservices/rabbitmq
        build: 
            context: ./rabbitmq
            dockerfile: Dockerfile
        cap_add:
            - ALL
        environment: 
            RABBITMQ_ERLANG_COOKIE: '6085e2412b6fa88647466c6a81c0cea0'
            RABBITMQ_NODENAME: rabbitmq-master
        ports:
            - "4369:4369"
            - "5671:5671"
            - "5672:5672"
            - "15671:15671"
            - "15672:15672"
            - "25672:25672"
            - "61613:61613"
        networks: 
            - internal
        volumes:
            - rabbitmq-master-log:/var/log/rabbitmq
            - rabbitmq-master-data:/var/lib/rabbitmq/mnesia

    rabbitmq-slave:
        hostname: rabbitmq-slave
        container_name: rabbitmq-slave
        image: microservices/rabbitmq
        build: 
            context: ./rabbitmq
            dockerfile: Dockerfile
        environment: 
            CLUSTERED: 'true'
            CLUSTER_WITH: rabbitmq-master@rabbitmq-master
            RAM_NODE: 'true'
            RABBITMQ_ERLANG_COOKIE: '6085e2412b6fa88647466c6a81c0cea0'
            RABBITMQ_NODENAME: rabbitmq-slave
        depends_on: 
            - rabbitmq-master
        networks: 
            - internal
        volumes:
            - rabbitmq-slave-log:/var/log/rabbitmq
            - rabbitmq-slave-data:/var/lib/rabbitmq/mnesia


volumes:
    rabbitmq-master-log:
        external: false
        name: rabbitmq-master-log
    rabbitmq-slave-log:
        external: false
        name: rabbitmq-slave-log
    rabbitmq-master-data:
        external: false
        name: rabbitmq-master-data
    rabbitmq-slave-data:
        external: false
        name: rabbitmq-slave-data